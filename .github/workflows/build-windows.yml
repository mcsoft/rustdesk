name: Build + Installers (Windows)

on:
  workflow_dispatch:
  push:
    branches: [ main, master ]

permissions:
  contents: read

env:
  DEFAULT_RENDEZVOUS_SERVER: ${{ secrets.DEFAULT_RENDEZVOUS_SERVER }}
  DEFAULT_RELAY_SERVER: ${{ secrets.DEFAULT_RELAY_SERVER }}
  DEFAULT_RS_PUB_KEY: ${{ secrets.DEFAULT_RS_PUB_KEY }}

jobs:
  build:
    runs-on: windows-2025

    steps:
      - name: Checkout (with submodules)
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Rust (stable-msvc)
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-pc-windows-msvc

      # ---- vcpkg: setup only (no auto-install) ----
      - name: Setup vcpkg
        uses: lukka/run-vcpkg@v11.5
        with:
          vcpkgDirectory: ${{ github.workspace }}\vcpkg
          doNotCache: true   # a bin√°ris cache-t a vcpkg maga kezeli

      - name: Install vcpkg deps (classic mode)
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'
          $env:VCPKG_ROOT = "$env:GITHUB_WORKSPACE\vcpkg"
          "VCPKG_ROOT=$env:VCPKG_ROOT" | Out-File -FilePath $env:GITHUB_ENV -Append
          & "$env:VCPKG_ROOT\vcpkg.exe" version
          & "$env:VCPKG_ROOT\vcpkg.exe" install --classic --triplet x64-windows-static libvpx libyuv opus aom

      # ---- LLVM / libclang bindgenhez ----
      - name: Install LLVM & Clang
        uses: KyleMayes/install-llvm-action@v2
        with:
          version: "20"
      - name: Export LIBCLANG_PATH
        shell: pwsh
        run: |
          "LIBCLANG_PATH=${{ env.LLVM_PATH }}\bin" | Out-File -FilePath $env:GITHUB_ENV -Append

      # ---- Build (GUI) ----
      - name: Build RustDesk (GUI)
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'
          cargo build --release
          $sciterUrl = "https://raw.githubusercontent.com/c-smile/sciter-sdk/master/bin.win/x64/sciter.dll"
          Invoke-WebRequest $sciterUrl -OutFile ".\target\release\sciter.dll" -UseBasicParsing

      - name: Upload binaries (GUI)
        uses: actions/upload-artifact@v4
        with:
          name: rustdesk-windows-gui-binaries
          path: |
            target\release\rustdesk.exe
            target\release\sciter.dll

      # ---- Inno Setup scriptek ----
      - name: Prepare Inno Setup scripts
        shell: pwsh
        run: |
          New-Item -Force -ItemType Directory dist | Out-Null
          New-Item -Force -ItemType Directory Output | Out-Null
          $src = Join-Path $PWD "target\release"
          $out = Join-Path $PWD "Output"

          $gui = @'
          [Setup]
          AppName=RustDesk (GUI)
          AppVersion=1.0
          DefaultDirName={pf}\RustDesk
          DefaultGroupName=RustDesk
          OutputBaseFilename=RustDesk-GUI-Setup
          OutputDir={OUT}
          Compression=lzma
          SolidCompression=yes
          ArchitecturesInstallIn64BitMode=x64
          PrivilegesRequired=admin

          [Files]
          Source: "{SRC}\rustdesk.exe"; DestDir: "{app}"; Flags: ignoreversion
          Source: "{
